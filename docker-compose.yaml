version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.5
    tmpfs: "/datalog"
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: ${ZOOKEEPER_PORT:-2181}
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_LOG4J_ROOT_LOGLEVEL: "INFO"

  kafka:
    image: confluentinc/cp-kafka:7.3.5
    depends_on:
      - zookeeper
    ports:
      - "49816:${KAFKA_PORT:-9092}"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:${ZOOKEEPER_PORT:-2181}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:${KAFKA_PORT:-9092},PLAINTEXT_HOST://localhost:${KAFKA_HOST_PORT:-29092}
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_LOG4J_ROOT_LOGLEVEL: "INFO"

  kafka-connect:
    image: confluentinc/cp-kafka-connect:7.3.5
    build:
      context: connect/
      dockerfile: Dockerfile
      args:
        JDBC_PLUGIN_PATH: ${JDBC_PLUGIN_PATH}
        DEBEZIUM_CONNECTOR_POSTGRES: ${DEBEZIUM_CONNECTOR_POSTGRES}
        JDBC_MYSQL_CONNECTOR: ${JDBC_MYSQL_CONNECTOR}
        KAFKA_CONNECT_JDBC_VERSION: ${KAFKA_CONNECT_JDBC_VERSION}
    depends_on:
      - kafka
    volumes:
      - './connect:/usr/share/java/connect'
    environment:
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_BOOTSTRAP_SERVERS: kafka:${KAFKA_PORT:-9092}
      CONNECT_REST_PORT: ${KAFKA_CONNECT_PORT:-8083}
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-status
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_PLUGIN_PATH: "/usr/share/java"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.7
    hostname: schema-registry
    depends_on:
      - kafka
    ports:
      - "${SCHEMA_REGISTRY_PORT:-8081}:${SCHEMA_REGISTRY_PORT:-8081}"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:${ZOOKEEPER_PORT:-2181}'
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:${SCHEMA_REGISTRY_PORT:-8081}
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:${KAFKA_PORT:-9092},PLAINTEXT_INTERNAL://localhost:19092
      SCHEMA_REGISTRY_DEBUG: 'true'
